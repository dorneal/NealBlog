<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nealblog.mapper.ArticleCustomMapper">

    <!--文章resultMap-->
    <resultMap id="StringResultMap" type="com.nealblog.po.ArticleEx">
        <id column="ArticleId" jdbcType="INTEGER" property="articleid"/>
        <result column="AuthorId" jdbcType="INTEGER" property="authorid"/>
        <result column="CategoryId" jdbcType="INTEGER" property="categoryid"/>
        <result column="ArticleTitle" jdbcType="VARCHAR" property="articletitle"/>
        <result column="ClickCount" jdbcType="INTEGER" property="clickcount"/>
    </resultMap>
    <!--加文章正文的文章resultMap-->
    <resultMap extends="StringResultMap" id="ResultContent" type="com.nealblog.po.ArticleEx">
        <result column="ArticleContent" jdbcType="LONGVARCHAR" property="articlecontent"/>
    </resultMap>

    <!--关联查询的resutlMap-->
    <resultMap id="AACResultMap" type="com.nealblog.po.ArticleVo">
        <!--关联作者-->
        <collection column="author" property="author" javaType="com.nealblog.po.AuthorEx">
            <id column="AuthorId" jdbcType="INTEGER" property="authorid"/>
            <result column="AuthorName" property="authorname" jdbcType="VARCHAR"/>
        </collection>
        <!--关联类别-->
        <collection column="category" property="category" javaType="com.nealblog.po.Category">
            <result column="CategoryName" property="categoryname" jdbcType="VARCHAR"/>
            <result column="CategoryId" property="categoryid" jdbcType="INTEGER"/>
        </collection>
        <!--关联文章-->
        <collection column="article" property="article" javaType="com.nealblog.po.ArticleEx">
            <id column="ArticleId" jdbcType="INTEGER" property="articleid"/>
            <result column="AuthorId" jdbcType="INTEGER" property="authorid"/>
            <result column="ArticleTitle" jdbcType="VARCHAR" property="articletitle"/>
            <result column="ArticleTime" jdbcType="VARCHAR" property="articletime"/>
            <result column="ClickCount" jdbcType="INTEGER" property="clickcount"/>
            <result column="ArticleContent" jdbcType="LONGVARCHAR" property="articlecontent"/>
            <result column="easyContent" jdbcType="VARCHAR" property="easycontent"/>
        </collection>
    </resultMap>

    <!--查找所有文章标题，显示在目录树-->
    <select id="findArticleTitle" resultMap="StringResultMap">
    SELECT ArticleTitle,ClickCount FROM article WHERE article.ArticleTime LIKE "2017%" ORDER BY article.ClickCount DESC limit 0,61
    </select>
    <!--查找最近的文章，分页显示在右边简要显示-->
    <select id="findNowArticle" parameterType="int" resultMap="AACResultMap">
    SELECT
      article.ArticleTitle,
      author.AuthorName,
      article.ClickCount,
      article.easyContent,
      category.CategoryName
    FROM
      article LEFT JOIN
      author ON(article.AuthorId=author.AuthorId),
      category
    WHERE
      article.CategoryId=3
    GROUP BY
      ArticleTime DESC
    limit #{startpage},#{size}
  </select>

    <!--查找点击后的正文-->
    <select id="findArticleContent" parameterType="java.lang.String" resultMap="AACResultMap">
        SELECT
            category.CategoryName,
            author.AuthorName,
            article.ArticleTitle,
            article.ArticleContent,
            article.ClickCount
        FROM
            article
        LEFT JOIN
            author
        ON(article.AuthorId=author.AuthorId)
        LEFT JOIN
            category
        ON(article.CategoryId=category.CategoryId)
        WHERE
            article.ArticleTitle=#{ArticleTitle}
    </select>

    <!--查询文章表中文章总记录数-->
    <select id="findPageCountByArticle" resultType="int">
        SELECT
          COUNT(*)
        FROM
          article
        WHERE
          article.CategoryId=3
    </select>
    <!--查询文章表中笔记记录数-->
    <select id="findPageCountByNote" resultType="int">
        SELECT
          COUNT(*)
          FROM
          article
          WHERE
          article.CategoryId=2
    </select>

    <!--更新点击数-->
    <update id="updateArticleCount" parameterType="java.lang.String">
        UPDATE article set ClickCount = ClickCount + 1 WHERE ArticleTitle=#{ArticleTitle}
    </update>

    <!--处理站内搜索-->
    <select id="findBySearch" parameterType="java.lang.String" resultMap="AACResultMap">
    SELECT
      article.ArticleTitle,
      author.AuthorName,
      article.ClickCount,
      article.easyContent,
      category.CategoryName
    FROM
      article LEFT JOIN author ON(article.AuthorId=author.AuthorId),category
    WHERE
      article.ArticleTitle LIKE CONCAT('%',#{articleTitle},'%')
    GROUP BY
     article.ArticleTitle
    ORDER BY
     article.ClickCount DESC;
    </select>

    <!--查询最新的10条文章记录-->
    <select id="findListArticle" resultType="articleex">
        select ArticleId,ArticleTitle,ArticleTime,ClickCount FROM article GROUP BY ArticleTime DESC limit 0,10
    </select>

    <!--文章管理-->
    <!--查找最近的笔记，分页显示在右边简要显示-->
    <select id="findNowNote" parameterType="int" resultMap="AACResultMap">
    SELECT
    article.ArticleTitle,
    author.AuthorName,
    article.ClickCount,
    article.easyContent,
    category.CategoryName
    FROM
    article LEFT JOIN
    author ON(article.AuthorId=author.AuthorId),
    category
    WHERE
    article.CategoryId=2
    GROUP BY
    ArticleTime DESC
    limit #{startpage},#{size}
</select>

    <!--用于博主，分页查询显示文章记录-->
    <select id="findNowArticles" parameterType="int" resultMap="AACResultMap">
    SELECT
        article.ArticleId,
        article.ArticleTitle,
        article.ArticleTime,
        article.ClickCount
        FROM
        article LEFT JOIN
        author ON(article.AuthorId=author.AuthorId)
        WHERE
        article.CategoryId=3
        ORDER BY
        ArticleTime DESC
        limit #{startpage},#{size}
</select>

    <!--用于博主，分页查询显示笔记记录-->
    <select id="findNowNotes" parameterType="int" resultMap="AACResultMap">
        SELECT
        article.ArticleId,
        article.ArticleTitle,
        article.ArticleTime,
        article.ClickCount
        FROM
        article LEFT JOIN
        author ON(article.AuthorId=author.AuthorId)
        WHERE
        article.CategoryId=2
        ORDER BY
        ArticleTime DESC
        limit #{startpage},#{size}
    </select>
</mapper>