<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nealblog.mapper.AuthorMapper">
  <resultMap id="BaseResultMap" type="com.nealblog.po.Author">
    <id column="AuthorId" jdbcType="INTEGER" property="authorid" />
    <result column="AuthorName" jdbcType="VARCHAR" property="authorname" />
    <result column="AuthorPassword" jdbcType="CHAR" property="authorpassword" />
    <result column="PublishCount" jdbcType="INTEGER" property="publishcount" />
    <result column="PublishTime" jdbcType="DATE" property="publishtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    AuthorId, AuthorName, AuthorPassword, PublishCount, PublishTime
  </sql>
  <select id="selectByExample" parameterType="com.nealblog.po.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByAuthorEx" parameterType="com.nealblog.po.AuthorEx" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM author
    WHERE AuthorName = #{authorEx.authorname} AND AuthorPassword = #{authorEx.authorpassword}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from author
    where AuthorId = #{authorid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from author
    where AuthorId = #{authorid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nealblog.po.AuthorExample">
    delete from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nealblog.po.Author">
    insert into author (AuthorId, AuthorName, AuthorPassword, 
      PublishCount, PublishTime)
    values (#{authorid,jdbcType=INTEGER}, #{authorname,jdbcType=VARCHAR}, #{authorpassword,jdbcType=CHAR}, 
      #{publishcount,jdbcType=INTEGER}, #{publishtime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.nealblog.po.Author">
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorid != null">
        AuthorId,
      </if>
      <if test="authorname != null">
        AuthorName,
      </if>
      <if test="authorpassword != null">
        AuthorPassword,
      </if>
      <if test="publishcount != null">
        PublishCount,
      </if>
      <if test="publishtime != null">
        PublishTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorid != null">
        #{authorid,jdbcType=INTEGER},
      </if>
      <if test="authorname != null">
        #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="authorpassword != null">
        #{authorpassword,jdbcType=CHAR},
      </if>
      <if test="publishcount != null">
        #{publishcount,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nealblog.po.AuthorExample" resultType="java.lang.Long">
    select count(*) from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update author
    <set>
      <if test="record.authorid != null">
        AuthorId = #{record.authorid,jdbcType=INTEGER},
      </if>
      <if test="record.authorname != null">
        AuthorName = #{record.authorname,jdbcType=VARCHAR},
      </if>
      <if test="record.authorpassword != null">
        AuthorPassword = #{record.authorpassword,jdbcType=CHAR},
      </if>
      <if test="record.publishcount != null">
        PublishCount = #{record.publishcount,jdbcType=INTEGER},
      </if>
      <if test="record.publishtime != null">
        PublishTime = #{record.publishtime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update author
    set AuthorId = #{record.authorid,jdbcType=INTEGER},
      AuthorName = #{record.authorname,jdbcType=VARCHAR},
      AuthorPassword = #{record.authorpassword,jdbcType=CHAR},
      PublishCount = #{record.publishcount,jdbcType=INTEGER},
      PublishTime = #{record.publishtime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nealblog.po.Author">
    update author
    <set>
      <if test="authorname != null">
        AuthorName = #{authorname,jdbcType=VARCHAR},
      </if>
      <if test="authorpassword != null">
        AuthorPassword = #{authorpassword,jdbcType=CHAR},
      </if>
      <if test="publishcount != null">
        PublishCount = #{publishcount,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null">
        PublishTime = #{publishtime,jdbcType=DATE},
      </if>
    </set>
    where AuthorId = #{authorid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nealblog.po.Author">
    update author
    set AuthorName = #{authorname,jdbcType=VARCHAR},
      AuthorPassword = #{authorpassword,jdbcType=CHAR},
      PublishCount = #{publishcount,jdbcType=INTEGER},
      PublishTime = #{publishtime,jdbcType=DATE}
    where AuthorId = #{authorid,jdbcType=INTEGER}
  </update>
</mapper>